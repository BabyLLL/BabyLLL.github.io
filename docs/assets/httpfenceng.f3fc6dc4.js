import{_ as l}from"./Blog.vue_vue&type=script&setup=true&lang.c7e0c2a9.js";import{l as e,o as a,m as n,h as t,a as i,k as r}from"./vendor.14139df1.js";import"./app.e930e480.js";const P=i("div",{class:"prose m-auto"},[i("h2",{id:"归纳",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#归纳","aria-hidden":"true"},"#"),r(" 归纳")]),i("ol",null,[i("li",null,"TCP/IP 分为四层，核心是二层的 IP 和三层的 TCP，HTTP 在第四层；"),i("li",null,"OSI 分为七层，基本对应 TCP/IP，TCP 在第四层，HTTP 在第七层；"),i("li",null,"OSI 可以映射到 TCP/IP，但这期间一、五、六层消失了；"),i("li",null,"日常交流的时候我们通常使用 OSI 模型，用四层、七层等术语；"),i("li",null,"HTTP 利用 TCP/IP 协议栈逐层打包再拆包，实现了数据传输，但下面的细节并不可见。")]),i("h2",{id:"应用",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#应用","aria-hidden":"true"},"#"),r(" 应用")]),i("p",null,"使用第几层，而不是表示四层协议或者七层协议"),i("blockquote",null,[i("p",null,"有一个辨别四层和七层比较好的（但不是绝对的）小窍门，“两个凡是”：凡是由操作系统负责处理的就是四层或四层以下，否则，凡是需要由应用程序（也就是你自己写代码）负责处理的就是七层。")]),i("h2",{id:"tcp-ip-网络分层模型",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#tcp-ip-网络分层模型","aria-hidden":"true"},"#"),r(" TCP/IP 网络分层模型")]),i("p",null,"TCP/IP 当初的设计者真的是非常聪明，创造性地提出了“分层”的概念，把复杂的网络通信划分出多个层次，再给每一个层次分配不同的职责，层次内只专心做自己的事情就好，用“分而治之”的思想把一个“大麻烦”拆分成了数个“小麻烦”，从而解决了网络通信的难题。"),i("p",null,"注意它的层次顺序是“从下往上”数的，所以第一层就是最下面的一层。"),i("p",null,"第一层叫“链接层”（link layer），负责在以太网、WiFi 这样的底层网络上发送原始数据包，工作在网卡这个层次，使用 MAC 地址来标记网络上的设备，所以有时候也叫 MAC 层。"),i("p",null,"第二层叫“网际层”或者“网络互连层”（internet layer），IP 协议就处在这一层。因为 IP 协议定义了“IP 地址”的概念，所以就可以在“链接层”的基础上，用 IP 地址取代 MAC 地址，把许许多多的局域网、广域网连接成一个虚拟的巨大网络，在这个网络里找设备时只要把 IP 地址再“翻译”成 MAC 地址就可以了。"),i("p",null,"第三层叫“传输层”（transport layer），这个层次协议的职责是保证数据在 IP 地址标记的两点之间“可靠”地传输，是 TCP 协议工作的层次，另外还有它的一个“小伙伴”UDP。"),i("p",null,"TCP 是一个有状态的协议，需要先与对方建立连接然后才能发送数据，而且保证数据不丢失不重复。而 UDP 则比较简单，它无状态，不用事先建立连接就可以任意发送数据，但不保证数据一定会发到对方。两个协议的另一个重要区别在于数据的形式。TCP 的数据是连续的“字节流”，有先后顺序，而 UDP 则是分散的小数据包，是顺序发，乱序收。"),i("p",null,"关于 TCP 和 UDP 可以展开讨论的话题还有很多，比如最经典的“三次握手”和“四次挥手”，一时半会很难说完，好在与 HTTP 的关系不是太大，以后遇到了再详细讲解。"),i("p",null,"协议栈的第四层叫“应用层”（application layer），由于下面的三层把基础打得非常好，所以在这一层就“百花齐放”了，有各种面向具体应用的协议。例如 Telnet、SSH、FTP、SMTP 等等，当然还有我们的 HTTP。"),i("p",null,"MAC 层的传输单位是帧（frame），IP 层的传输单位是包（packet），TCP 层的传输单位是段（segment），HTTP 的传输单位则是消息或报文（message）。但这些名词并没有什么本质的区分，可以统称为数据包。OSI"),i("h2",{id:"osi网络分成模型",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#osi网络分成模型","aria-hidden":"true"},"#"),r(" OSI网络分成模型")]),i("ol",null,[i("li",null,"第一层：物理层，网络的物理形式，例如电缆、光纤、网卡、集线器等等；"),i("li",null,"第二层：数据链路层，它基本相当于 TCP/IP 的链接层；"),i("li",null,"第三层：网络层，相当于 TCP/IP 里的网际层；"),i("li",null,"第四层：传输层，相当于 TCP/IP 里的传输层；"),i("li",null,"第五层：会话层，维护网络中的连接状态，即保持会话和同步；"),i("li",null,"第六层：表示层，把数据转换为合适、可理解的语法和语义；"),i("li",null,"第七层：应用层，面向具体的应用传输数据。")]),i("h2",{id:"两个分层模型的映射关系",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#两个分层模型的映射关系","aria-hidden":"true"},"#"),r(" 两个分层模型的映射关系")]),i("p",null,[i("img",{src:"https://static001.geekbang.org/resource/image/9d/94/9d9b3c9274465c94e223676b6d434194.png",alt:"分层映射"})]),i("ol",null,[i("li",null,"第一层：物理层，TCP/IP 里无对应；"),i("li",null,"第二层：数据链路层，对应 TCP/IP 的链接层；"),i("li",null,"第三层：网络层，对应 TCP/IP 的网际层；"),i("li",null,"第四层：传输层，对应 TCP/IP 的传输层；"),i("li",null,"第五、六、七层：统一对应到 TCP/IP 的应用层。")]),i("h2",{id:"tcp-ip-协议栈的工作方式",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#tcp-ip-协议栈的工作方式","aria-hidden":"true"},"#"),r(" TCP/IP 协议栈的工作方式")]),i("p",null,[i("img",{src:"https://static001.geekbang.org/resource/image/70/6f/70bc19acacf2245fa841349f15cb7a6f.png",alt:"协议栈"})])],-1),u={setup(i,{expose:r}){const u={title:"05 | 常说的“四层”和“七层”到底是什么？“五层”“六层”哪去了？",date:"2021-09-26T16:00:00.000Z",duration:"10min",meta:[{property:"og:title",content:"05 | 常说的“四层”和“七层”到底是什么？“五层”“六层”哪去了？"}]};r({frontmatter:u});return e({title:"05 | 常说的“四层”和“七层”到底是什么？“五层”“六层”哪去了？",meta:[{property:"og:title",content:"05 | 常说的“四层”和“七层”到底是什么？“五层”“六层”哪去了？"}]}),(e,i)=>{const r=l;return a(),n(r,{frontmatter:u},{default:t((()=>[P])),_:1})}}};export{u as default};
